{"version":3,"sources":["History.js","views/Utils/Modal.jsx","views/ListView/components/BlogCard.jsx","views/Utils/Form/TextInput.js","views/Utils/Form/Redactor.js","views/ListView/components/SearchInput.jsx","views/ListView/index.jsx","views/BlogView/index.jsx","views/BlogForm/index.jsx","helpers/validationHelper.js","Routes.js","index.js"],"names":["createBrowserHistory","Modal","_ref","title","message","onConfirm","onCancel","react_default","a","createElement","className","style","background","width","maxWidth","onClick","BlogCard","blog","deleteCallback","_useState","useState","_useState2","Object","slicedToArray","deleting","setDeleting","Fragment","height","src","image","category","moment","post_date","format","moreChar","content","react_router_dom","to","concat","uuid","Utils_Modal","axios","delete","then","res","text","limit","arguments","length","undefined","textOverflow","replace","substr","TextInput","_ref$formGroupClassNa","formGroupClassName","_ref$containerClassNa","containerClassName","_ref$label","label","_ref$error","error","_ref$onKeyEnter","onKeyEnter","containerStyles","onChange","rightIcon","leftIcon","customButtons","_ref$hideClearBtn","hideClearBtn","pattern","props","objectWithoutProperties","validation","inputRef","useRef","isPassword","type","showPass","setShowPass","select","value","invalid","valid","numeric","e","parseToMoney","objectSpread","parseToNumber","onBlur","min","onTextChange","useEffect","max","target","name","current","disabled","Label","FormGroup","tabIndex","id","Input","assign","innerRef","onKeyDown","key","newValue","options","hideDropDownIcon","map","option","originalValue","callback","isNaN","indexOf","parseInt","toString","parseFloat","action","toFixed","Redactor","EditorState","createWithContent","convertFromRaw","JSON","parse","createEmpty","editorState","setEditorState","_useState3","_useState4","contentState","setContentState","react_draft_wysiwyg","wrapperClassName","editorClassName","toolbarClassName","onEditorStateChange","onContentStateChange","draftToHtml","stringify","onFocus","toolbar","SearchInput","onSearch","_ref$initialValue","initialValue","keyword","setKeyword","TextInput_TextInput","placeholder","generatePaginationLinks","resHeader","pages","link","lastLink","split","pop","find","param","includes","err","ListView","history","useHistory","blogs","setBlogs","mounted","setMounted","_useState5","page","sort","_useState6","filters","setFilters","_useState7","_useState8","setPages","formQryString","params","qrystr","getList","get","headers","data","queryparams","location","search","queryString","retreiveQryStrings","SearchInput_SearchInput","newFilters","push","BlogCard_BlogCard","toConsumableArray","Array","p","index","setBlog","useParams","backgroundImage","backgroundSize","backgroundAttachment","backgroundPosition","backgroundColor","author","unix","lineHeight","dangerouslySetInnerHTML","__html","randomStr","result","characters","charactersLength","i","charAt","Math","floor","random","formRules","properties","required","allowEmpty","conform","BlogForm","loading","setLoading","errors","setErrors","handleInputChange","newBlog","handleSubmit","object","schema","hideName","revalidator","validate","forEach","propName","str","frags","toUpperCase","slice","join","humanize","property","put","post","finally","Redactor_Redactor","content_draft","withRouter","react_router","exact","path","views_ListView","BlogView","views_BlogForm","render","src_Routes","document","getElementById"],"mappings":"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","file":"static/js/main.163694ea.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React from 'react';\r\n\r\nconst Modal = ({\r\n    title,\r\n    message,\r\n    onConfirm,\r\n    onCancel\r\n}) => {\r\n\r\n    return (\r\n        <div\r\n            className=\"fixed-cover-container flex align-center justify-center\"\r\n            style={{ background: \"rgba(0, 0, 0, 0.3)\" }}\r\n        >\r\n            <div\r\n                className=\"card shadowed pad-20\"\r\n                style={{\r\n                    width: \"100%\",\r\n                    maxWidth: 600\r\n                }}\r\n            >\r\n                <div className=\"txt-center txt-bold txt-large\">\r\n                    { title }\r\n                </div>\r\n                <div className=\"margin-top-20 txt-medium-large txt-center\">\r\n                    { message }\r\n                </div>\r\n                <div className=\"flex align-center space-between margin-top-50\">\r\n                    <button\r\n                        className=\"btn btn-clear btn-pad-large txt-dark\"\r\n                        onClick={ () => onCancel() }\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        className=\"btn btn-success btn-pad-large txt-dark\"\r\n                        onClick={ () => onConfirm() }\r\n                    >\r\n                        Coninue\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Modal from '../../Utils/Modal';\r\n\r\nconst BlogCard = ({ blog, deleteCallback }) => {\r\n    const [deleting, setDeleting] = useState(false);\r\n    const handleDelete = () => {\r\n        axios\r\n            .delete(`http://localhost:3001/blogs/${ blog.uuid }`)\r\n            .then(res => {\r\n                deleteCallback();\r\n                setDeleting(false);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div  className=\"card flex direction-column\" style={{ height: \"100%\" }}>\r\n                <div style={{ background: \"#ccc\" }}>\r\n                    <img\r\n                        className=\"img img-cover\"\r\n                        src={ blog.image ? blog.image : 'https://picsum.photos/200/300'}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: 200\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"pad-20 flex-1\">\r\n                    <div className=\"txt-small txt-uppercase\">\r\n                        { blog.category }\r\n                    </div>\r\n                    <div className=\"txt-bold txt-large\">\r\n                        { blog.title }\r\n                    </div>\r\n                    <div className=\"txt-xsmall margin-top\">\r\n                        Posted: { moment(blog.post_date).format(\"MMMM DD, YYYY\") }\r\n                    </div>\r\n                    <div className=\"margin-top-10 txt-medium\">\r\n                        { moreChar(blog.content, 255) }\r\n                    </div>\r\n                </div>\r\n                <div className=\"margin-top-20 flex flex-end pad-20\">\r\n                    <button\r\n                        onClick={ () => setDeleting(true) }\r\n                        className=\"btn btn-clear-bordered-red btn-width-auto txt-small\"\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                    <Link\r\n                        to={`/blog/edit/${ blog.uuid }`}\r\n                        className=\"btn btn-clear-bordered-green btn-width-auto txt-small margin-left-20\"\r\n                    >\r\n                        Edit\r\n                    </Link>\r\n                    <Link\r\n                        to={`/blog/view/${ blog.uuid }`}\r\n                        className=\"btn btn-clear-bordered-black btn-width-auto txt-small margin-left-20\"\r\n                    >\r\n                        View\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            {\r\n                deleting ? (\r\n                    <Modal\r\n                        title=\"Confirm Action\"\r\n                        message=\"Are you sure you want to continue?\"\r\n                        onConfirm={handleDelete}\r\n                        onCancel={ () => setDeleting(false) }\r\n                    />\r\n                ) : null\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\n\r\n\r\nconst moreChar = (text, limit = 100, textOverflow = \"...\") => {\r\n    text = text.replace(/(<([^>]+)>)/ig,\"\");\r\n\r\n    if (text) {\r\n        if (text.length > limit) {\r\n            text = text.substr(0, (limit + textOverflow.length) < text.length ? limit : (text.length - textOverflow.length)) + textOverflow;\r\n        }\r\n    }\r\n\r\n    return text;\r\n}\r\n\r\nexport { BlogCard };","import React, {useState, useEffect, useRef} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FormGroup, Label, Input } from 'reactstrap';\r\n\r\nconst TextInput = ({\r\n    formGroupClassName = \"\",\r\n    containerClassName = \"\",\r\n    label = \"\",\r\n    error = undefined,\r\n    onKeyEnter = false,\r\n    containerStyles,\r\n    onChange,\r\n    rightIcon,\r\n    leftIcon,\r\n    customButtons,\r\n    hideClearBtn = false,\r\n    pattern,\r\n    ...props\r\n}) => {\r\n    const validation = {},\r\n        inputRef = useRef(null),\r\n        isPassword = props.type === \"password\",\r\n        [showPass, setShowPass] = useState(false);\r\n\r\n    let select = false;\r\n\r\n    if (props.value === undefined) {\r\n        props.value = \"\";\r\n    }\r\n\r\n    if (error) {\r\n        validation.invalid = true;\r\n    } else if (error !== undefined) {\r\n        validation.valid = true;\r\n    }\r\n\r\n    if (props.type === \"password\") {\r\n        props.type = showPass ? \"text\" : \"password\";\r\n    }\r\n\r\n    if (props.type === \"select\") {\r\n        props.type = \"text\"\r\n        select = true;\r\n    }\r\n\r\n    if (props.numeric) {\r\n        if (props.numeric === \"money\") {\r\n            props.onChange = e => parseToMoney(e, props.value ? props.value : '', {...props}, onChange);\r\n        } else {\r\n            props.onChange = e => parseToNumber(e, props.value ? props.value : '', props.numeric, {...props}, onChange);\r\n        }\r\n\r\n        props.onBlur = (e) => {\r\n            if (props.numeric === \"money\") {\r\n                parseToMoney(e, props.value ? props.value : (props.min ? props.min : 0), {...props}, onChange, \"blur\");\r\n            } else {\r\n                parseToNumber(e, props.value ? props.value : (props.min ? props.min : 0), props.numeric, {...props}, onChange);\r\n            }\r\n        }\r\n    } else {\r\n        props.onChange = e => onTextChange(e, {...props}, pattern, onChange);\r\n    }\r\n\r\n    //** used for money auto parsing */\r\n    // useEffect(() => {\r\n    //     if(inputRef.current === document.activeElement && (props.numeric === \"money\")) {\r\n    //         if(props.value.toString().substr(-3) === \".00\") {\r\n    //             const pos = props.value.toString().indexOf('.');\r\n    //             inputRef.current.focus();\r\n    //             inputRef.current.setSelectionRange(pos, pos);\r\n    //         }\r\n    //     }\r\n    // }, [props.value]);\r\n\r\n    useEffect(() => {\r\n        if (props.numeric && props.max) {\r\n            if (props.numeric === \"money\") {\r\n                parseToMoney({target: {name: props.name, value: props.value}}, props.value, {...props}, onChange);\r\n            } else {\r\n                parseToNumber({target: {name: props.name, value: props.value}}, props.value ? props.value : '', props.numeric, {...props}, onChange);\r\n            }\r\n        }\r\n    }, [props.max]);\r\n\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n            inputRef.current = null;\r\n        }\r\n    }, []);\r\n\r\n    return ( \r\n        <div\r\n            className={`form-group-container relative-container ${containerClassName} ${props.disabled ? 'disabled' : ''}`}\r\n            style={containerStyles}\r\n        >\r\n            {\r\n                label ? (\r\n                    <div className=\"margin-bottom flex align-center\">\r\n                        {\r\n                            label ? (\r\n                                <Label\r\n                                    className=\"txt-medium txt-regular\"\r\n                                >\r\n                                    {label}\r\n                                </Label>\r\n                            ) : null\r\n                        }\r\n                    </div>\r\n                ) : null\r\n            }\r\n            <div className={`relative-container ${props.disabled ? 'no-pointer' : ''}`}>\r\n                <FormGroup\r\n                    className={formGroupClassName + \" relative-container\"}\r\n                >\r\n                    <div className=\"relative-container flex align-center\">\r\n                        {\r\n                            leftIcon ? (\r\n                                <div\r\n                                    className={`txt-medium pad-left-10 no-pointer`}\r\n                                    tabIndex=\"-1\"\r\n                                >\r\n                                    {leftIcon}\r\n                                </div>\r\n                            ) : null\r\n                        }\r\n                        <div\r\n                            id={props.name}\r\n                            className={`flex-1 ${select ? 'clickable' : ''}`}\r\n                        >\r\n                            <div className={`${select ? 'no-pointer' : ''} flex`}>\r\n                                <Input \r\n                                    innerRef={inputRef}\r\n                                    onKeyDown={(e) => {\r\n                                        if (e.key === \"Enter\") {\r\n                                            onKeyEnter && onKeyEnter(e);\r\n                                        }\r\n                                    }}\r\n                                    {...validation}\r\n                                    {...props}\r\n                                    className={\"form-control txt-medium-large\"}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            !select && !props.disabled && (\r\n                                <>\r\n                                    {\r\n                                        customButtons ? customButtons : null\r\n                                    }\r\n                                    {\r\n                                        !hideClearBtn ? (\r\n                                            <button\r\n                                                className={`control clear-form transitioned-fast ${isPassword ? \"\" : \"pad-right-10\"}`}\r\n                                                onClick={() => {\r\n                                                    let newValue = \"\";\r\n\r\n                                                    if (props.numeric && props.min) {\r\n                                                        newValue = props.min;\r\n                                                    }\r\n\r\n                                                    props.onChange({target: {name: props.name, value: newValue}});\r\n                                                }}\r\n                                                tabIndex=\"-1\"\r\n                                            >\r\n                                                <i className=\"fas fa-times-circle\" />\r\n                                            </button>\r\n                                        ) : null\r\n                                    }\r\n                                    {\r\n                                        isPassword && !props.disabled && (\r\n                                            <button\r\n                                                className={`control clear-form transitioned-fast pad-right-10`}\r\n                                                onClick={() => setShowPass(!showPass)}\r\n                                                tabIndex=\"-1\"\r\n                                            >\r\n                                                <i className={`far fa-eye${showPass ? '-slash' : ''}`} />\r\n                                            </button>\r\n                                        )\r\n                                    }\r\n                                    {\r\n                                        rightIcon ? (\r\n                                            <div\r\n                                                className={`txt-medium pad-right-10 no-pointer`}\r\n                                                tabIndex=\"-1\"\r\n                                            >\r\n                                                {rightIcon}\r\n                                            </div>\r\n                                        ) : null\r\n                                    }\r\n                                </>\r\n                            )\r\n                        }\r\n                        {\r\n                        (select || (props.options && props.options.length > 0)) && !props.hideDropDownIcon && (\r\n                                <button\r\n                                    className={`control clear-form select-down no-pointer no-transition pad-left-10`}\r\n                                    tabIndex=\"-1\"\r\n                                >\r\n                                    <i className=\"fas fa-caret-down txt-large\" />\r\n                                </button>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </FormGroup>\r\n                {\r\n                    select && props.options && props.options.length > 0 ? (\r\n                        <div className=\"select-options txt-dark\">\r\n                            <div>\r\n                                {\r\n                                    props.options.map(option => {\r\n                                        return (\r\n                                            <div className=\"option\">\r\n                                                {option.label}\r\n                                            </div>\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    ) : null\r\n                }\r\n            </div>\r\n            {error && validation.invalid &&\r\n                <div className=\"flex flex-end margin-top form-control-error\">\r\n                    <div className=\"badge badge-error text-right txt-light txt-small\">\r\n                        <div className=\"flex\">\r\n                            <i className=\"fas fa-exclamation-circle margin-right pulse\"/>\r\n                            <div>\r\n                                {error}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst parseToNumber = (e, originalValue, type, props, callback) => {\r\n    if (!isNaN(e.target.value) && e.target.value.indexOf('.') === -1) {\r\n        let newValue = e.target.value;\r\n        if (newValue !== '') {\r\n            if (type === \"int\") {\r\n                newValue = parseInt(newValue);\r\n                if (props.max && (newValue > parseInt(props.max))) {\r\n                    newValue = parseInt(props.max).toString();\r\n                }\r\n\r\n                if (props.min && (parseFloat(newValue) < parseFloat(props.min))) {\r\n                    newValue = parseFloat(props.min).toString();\r\n                }\r\n            }\r\n            \r\n            newValue = newValue.toString();\r\n        } else {\r\n            if (props.min) {\r\n                newValue = props.min.toString();\r\n            }\r\n        }\r\n\r\n        callback({target: {value: newValue, name: e.target.name}});\r\n    } else {\r\n        callback({target: {value: originalValue, name: e.target.name}});\r\n    }\r\n}\r\n\r\nconst parseToMoney = (e, originalValue, props, callback, action = \"onChange\") => {\r\n    if (!isNaN(e.target.value)) {\r\n        let newValue = e.target.value;\r\n        if (newValue !== '' && newValue !== undefined && newValue !== null) {\r\n            \r\n            if (!isNaN(props.max) && (parseFloat(newValue) > parseFloat(props.max))) {\r\n                newValue = parseFloat(props.max);\r\n            }\r\n\r\n            if (props.min && (parseFloat(newValue) < parseFloat(props.min))) {\r\n                newValue = parseFloat(props.min);\r\n            }\r\n            // if (!newValue.toString().includes('.')) {\r\n            //     newValue = parseFloat(newValue).toFixed(2).toString();\r\n            // }\r\n            \r\n            newValue = newValue.toString();\r\n        }\r\n\r\n        if (action === \"blur\") {\r\n\r\n            if (!newValue) {\r\n                newValue = props.min ? props.min : '';\r\n            } else {\r\n                newValue = parseFloat(newValue).toFixed(2);\r\n            }\r\n\r\n            newValue = newValue.toString();\r\n        }\r\n\r\n        callback({target: {value: newValue, name: e.target.name}});\r\n    } else {\r\n        callback({target: {value: originalValue, name: e.target.name}});\r\n    }\r\n}\r\n\r\nconst onTextChange = (e, props, pattern, callback) => {\r\n    if (props.max && parseInt(props.max) < e.target.value.length) {\r\n        e.target.value = props.value;\r\n    }\r\n\r\n    if (pattern) {\r\n        e.target.value = e.target.value.replace(pattern,'');\r\n    }\r\n\r\n    callback(e);\r\n}\r\n\r\nexport {TextInput};","import React, {useState, useEffect} from 'react';\r\nimport { Label } from 'reactstrap';\r\nimport { EditorState, convertFromRaw} from 'draft-js';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\nconst Redactor = ({\r\n    className = '',\r\n    style = {},\r\n    onChange,\r\n    ...props\r\n}) => {\r\n    const [editorState, setEditorState] = useState(props.value ? EditorState.createWithContent(convertFromRaw(JSON.parse(props.value))) : EditorState.createEmpty());\r\n    const [contentState, setContentState] = useState();\r\n    const defaultOptions = ['inline', 'blockType', 'fontSize', 'list', 'textAlign', 'colorPicker', 'link', 'embedded', 'remove', 'history'];\r\n\r\n    const setContent = (content) => {\r\n        setContentState(content);\r\n        onChange({target: {value: draftToHtml(content), name: props.name}});\r\n    }\r\n\r\n    const onBlur = () => {\r\n        if (props.onBlur) {\r\n            props.onBlur({target: {value: JSON.stringify(contentState), name: `${props.name}_draft`}});\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {\r\n                props.label ? (\r\n                    <div className=\"margin-bottom\">\r\n                        <Label className=\"txt-medium txt-regular\">\r\n                            {props.label}\r\n                        </Label>\r\n                    </div>\r\n                ) : null\r\n            }\r\n             <Editor\r\n                editorState={editorState}\r\n                wrapperClassName=\"redactor\"\r\n                editorClassName=\"redactor-editor\"\r\n                toolbarClassName=\"redactor-toolbar\"\r\n                onEditorStateChange={e => setEditorState(e)}\r\n                onContentStateChange={e => setContent(e)}\r\n                onBlur={() => onBlur()}\r\n                onFocus={() => props.onFocus ? props.onFocus() : {}}\r\n                toolbar={\r\n                    Object.assign(\r\n                        {},\r\n                        {options: props.options ? props.options : defaultOptions}\r\n                    )\r\n                }\r\n            />\r\n            {props.error &&\r\n                <div className=\"flex flex-end margin-top form-control-error\">\r\n                    <div className=\"badge badge-error text-right txt-light txt-small\">\r\n                        <i className=\"fas fa-exclamation-circle margin-right\"/>\r\n                        {props.error}\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport {Redactor};","import React, { useState, useEffect } from 'react';\r\n\r\n//components\r\nimport { TextInput } from '../../Utils/Form';\r\nconst SearchInput = ({ onSearch, initialValue = '' }) => {\r\n    const [keyword, setKeyword] = useState(initialValue);\r\n    \r\n    useEffect(() => {\r\n        setKeyword(initialValue);\r\n    }, [initialValue]);\r\n    return(\r\n        <div className=\"flex-1 flex align-center\">\r\n            <div className=\"flex-1\">\r\n                <TextInput\r\n                    name=\"keyword\"\r\n                    placeholder=\"Search keyword here...\"\r\n                    value={ keyword }\r\n                    onChange={ e => setKeyword(e.target.value) }\r\n                    onKeyEnter={ () => onSearch(keyword) }\r\n                />\r\n            </div>\r\n            <button\r\n                className=\"btn btn-pad-large txt-center margin-left-10\"\r\n                onClick={ () => onSearch(keyword) }\r\n            >\r\n                Search\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { SearchInput };","import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router';\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\n\r\nimport { BlogCard, SearchInput } from './components';\r\n\r\nconst ListView = () => {\r\n    const history = useHistory();\r\n    const [blogs, setBlogs] = useState([]);\r\n    const [mounted, setMounted] = useState(false);\r\n    const [filters, setFilters] = useState({\r\n        page: 1,\r\n        keyword: '',\r\n        sort: ''\r\n    });\r\n    const [pages, setPages] = useState(0);\r\n    const formQryString = (params) => {\r\n        let qrystr = '';\r\n        if (params.page) qrystr += `page=${ params.page }`;\r\n        if (params.keyword) qrystr += `&keyword=${ params.keyword }`;\r\n        if (params.sort === \"asc\") qrystr += `&sort=${ params.sort }`;\r\n\r\n        return qrystr;\r\n    }\r\n    const retreiveQryStrings = () => {\r\n        let queryparams = {\r\n            page: 1,\r\n            keyword: '',\r\n            sort: ''\r\n        };\r\n        \r\n        if (history.location.search) {\r\n            queryparams = queryString.parse(history.location.search);\r\n        }\r\n\r\n        if (!queryparams.page) queryparams.page = 1;\r\n        queryparams.page = parseInt(queryparams.page);\r\n\r\n        if(!queryparams.sort) queryparams.sort = '';\r\n        \r\n        setFilters(queryparams);\r\n    }\r\n    const getList = () => {\r\n        let qrystr = `_page=${filters.page}&_limit=9`;\r\n\r\n        if ( filters.keyword ) qrystr += `&title_like=${ filters.keyword }`;\r\n        if ( !filters.sort ) qrystr += `&_sort=post_date&_order=desc`;\r\n\r\n        axios\r\n            .get(`http://localhost:3001/blogs?${qrystr}`)\r\n            .then(res => {\r\n                setPages(generatePaginationLinks(res.headers));\r\n                if (res.data) setBlogs(res.data);\r\n            });\r\n    };\r\n    const handleSearch = (keyword) => {\r\n        const newFilters = {...filters};\r\n        newFilters.page = 1;\r\n        newFilters.keyword = keyword;\r\n        history.push(`?${ formQryString(newFilters) }`);\r\n        setFilters(newFilters);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setMounted(true);\r\n        retreiveQryStrings();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(mounted) getList();\r\n    }, [filters]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container-1200 margin-auto-h pad-top-50 pad-bottom-50\">\r\n                <div className=\"flex flex-end\">\r\n                    <div>\r\n                        <Link\r\n                            to=\"/blog/create\"\r\n                            className=\"btn btn-pad-large btn-success txt-center\"\r\n                        >\r\n                            Create\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"txt-header-2 txt-bold margin-top-30 txt-center\">\r\n                    Blogs\r\n                </div>\r\n                <div className=\"margin-top-10\">\r\n                    <div className=\"flex-1\">\r\n                        <SearchInput onSearch={ handleSearch } initialValue={ filters.keyword }/>\r\n                    </div>\r\n                    <div className=\"flex align-center flex-end margin-top-20\">\r\n                        <div className=\"margin-left-20\">\r\n                            <Link\r\n                                className={`btn ${!filters.sort ? '' : 'btn-clear-bordered-black'}  btn-pad-large`}\r\n                                onClick={ () => setFilters({ ...filters, ...{ sort: '' } }) }\r\n                                to={`?${ formQryString({ ...filters, ...{ sort: '' } }) }`}\r\n                            >\r\n                                Sort Descending\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"margin-left-20\">\r\n                            <Link\r\n                                className={`btn ${filters.sort ? '' : 'btn-clear-bordered-black'}  btn-pad-large`}\r\n                                onClick={ () => setFilters({ ...filters, ...{ sort: 'asc' } }) }\r\n                                to={`?${ formQryString({ ...filters, ...{ sort: 'asc' } }) }`}\r\n                            >\r\n                                Sort Ascending\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"margin-top-20 grid grid-3 grid-gap-20\">\r\n                    {\r\n                        blogs.map(blog => (\r\n                            <div key={ blog.uuid } >\r\n                                <BlogCard\r\n                                    blog={ blog }\r\n                                    deleteCallback={ getList }\r\n                                />\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                {\r\n                    pages ? (\r\n                        <div className=\"margin-top-100 flex align-center justify-center\">\r\n                            {\r\n                                [...Array(pages)].map((p, index) => (\r\n                                    <Link\r\n                                        className={`btn btn-icon ${ (index + 1) === filters.page ? \"btn-success\" : \"txt-dark\" }`}\r\n                                        onClick={() => setFilters({ ...filters, ...{page: index + 1} })}\r\n                                        to={`?${ formQryString({ ...filters, ...{ page: index + 1 } }) }`}\r\n                                    >\r\n                                        { index + 1}\r\n                                    </Link>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    ) : null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst generatePaginationLinks = (resHeader) => {\r\n    let pages = 0;\r\n    if (resHeader.link) {\r\n        const lastLink = resHeader.link.split(\",\").pop();\r\n        try {\r\n            pages = lastLink\r\n                    .split(';')[0]\r\n                    .replace('http://localhost:3001/blogs?', '')\r\n                    .split('&')\r\n                    .find(param => param.includes(\"_page\"))\r\n                    .replace(\"_page=\", '')\r\n                    .replace('<', '');\r\n        }\r\n        catch(err) {\r\n            pages = 0;\r\n        }\r\n    }\r\n\r\n    return parseInt(pages);\r\n}\r\n\r\nexport default ListView;","import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { useParams } from 'react-router';\r\nimport axios from 'axios';\r\n\r\nconst ListView = () => {\r\n    const [blog, setBlog] = useState(null);\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`http://localhost:3001/blogs/${params.uuid}`)\r\n                .then(res => res.data ? setBlog(res.data) : {});\r\n    }, []);\r\n    \r\n    return blog ? (\r\n        <div>\r\n            <div style={{\r\n                backgroundImage: `url(${ blog.image })`,\r\n                backgroundSize: \"cover\",\r\n                backgroundAttachment: \"fixed\",\r\n                backgroundPosition: \"center\",\r\n                backgroundColor: \"#ccc\",\r\n                height: 400\r\n            }} />\r\n            <div className=\"container-1200 margin-auto-h pad-top-50 pad-bottom-50\">\r\n                <div className=\"margin-bottom-10\">\r\n                    <Link to=\"/\" className=\"btn btn-clear-bordered-black txt-center\">\r\n                        Go Back\r\n                    </Link>\r\n                </div>\r\n                <div className=\"margin-top-30 txt-medium txt-uppercase\">\r\n                    { blog.category }\r\n                </div>\r\n                <div className=\"txt-header-2 txt-bold\">\r\n                    { blog.title }\r\n                </div>\r\n                <div className=\"margin-top\">\r\n                    Posted by <strong>{ blog.author }</strong>\r\n                </div>\r\n                <div className=\"margin-top\">\r\n                    Posted on <strong>{ moment.unix(blog.post_date).format(\"MMM DD, YYYY\") }</strong>\r\n                </div>\r\n                <div\r\n                    className=\"margin-top-50 txt-medium-large\"\r\n                    style={{lineHeight: 1.4}}\r\n                    dangerouslySetInnerHTML={{ __html: blog.content }}\r\n                />\r\n            </div>\r\n        </div>\r\n    ) : null\r\n}\r\n\r\nexport default ListView;","import React, {useState, useEffect} from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nimport {\r\n    TextInput,\r\n    Redactor\r\n} from '../Utils/Form';\r\n\r\nimport history from '../../History';\r\nimport { validate } from '../../helpers/validationHelper';\r\n\r\nconst BlogForm = () => {\r\n    const params = useParams();\r\n    const [blog, setBlog] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [errors, setErrors] = useState({});\r\n    \r\n    const handleInputChange = (e) => {\r\n        const newBlog = {...blog};\r\n        newBlog[e.target.name] = e.target.value;\r\n        setBlog(newBlog);\r\n    }\r\n    const handleCreate = () => {\r\n        axios\r\n            .post(`http://localhost:3001/blogs`, { ...blog, ...{ uuid: randomStr(20), post_date: moment().unix() } })\r\n            .then(res => history.push('/'));\r\n    }\r\n    const handleUpdate = () => {\r\n        axios\r\n            .put(`http://localhost:3001/blogs/${params.uuid}`, blog)\r\n            .then(res => history.push('/'));\r\n    }\r\n    const handleSubmit = () => {\r\n        const validation = validate(blog, formRules);\r\n\r\n        setErrors(validation.errors);\r\n        if (validation.valid) {\r\n            if (blog.uuid) handleUpdate();\r\n            else handleCreate();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (params.uuid) {\r\n            axios\r\n                .get(`http://localhost:3001/blogs/${params.uuid}`)\r\n                .then(res => res.data ? setBlog(res.data) : {})\r\n                .finally(() => setLoading(false));\r\n        }\r\n        else setLoading(false);\r\n    }, []);\r\n\r\n    return loading ? null : (\r\n        <div>\r\n            <div className=\"container-1200 margin-auto-h pad-top-50 pad-bottom-50\">\r\n                <div className=\"txt-xlarge txt-bold txt-capitalize\">\r\n                    {params.action} Blog\r\n                </div>\r\n                <div className=\"margin-top-20\">\r\n                    <TextInput\r\n                        label=\"Title\"\r\n                        name=\"title\"\r\n                        value={ blog.title }\r\n                        onChange={handleInputChange}\r\n                        onKeyEnter={handleSubmit}\r\n                        error={ errors.title }\r\n                    />\r\n                </div>\r\n                <div className=\"margin-top-20\">\r\n                    <TextInput\r\n                        label=\"Category\"\r\n                        name=\"category\"\r\n                        value={ blog.category }\r\n                        onChange={handleInputChange}\r\n                        onKeyEnter={handleSubmit}\r\n                        error={ errors.category }\r\n                    />\r\n                </div>\r\n                <div className=\"margin-top-20\">\r\n                    <TextInput\r\n                        label=\"Author\"\r\n                        name=\"author\"\r\n                        value={ blog.author }\r\n                        onChange={handleInputChange}\r\n                        onKeyEnter={handleSubmit}\r\n                        error={ errors.author }\r\n                    />\r\n                </div>\r\n                <div className=\"margin-top-20\">\r\n                    <Redactor\r\n                        label=\"Content\"\r\n                        placeholder=\"Enter a content here...\"\r\n                        name=\"content\"\r\n                        value={ blog.content_draft }\r\n                        onChange={handleInputChange}\r\n                        onBlur={handleInputChange}\r\n                        error={ errors.content }\r\n                    />\r\n                </div>\r\n                <div className=\"margin-top-20\">\r\n                    <TextInput\r\n                        label=\"Image\"\r\n                        name=\"image\"\r\n                        value={ blog.image }\r\n                        onChange={handleInputChange}\r\n                        onKeyEnter={handleSubmit}\r\n                    />\r\n                </div>\r\n                <div className=\"margin-top-50 flex space-between\">\r\n                    <Link\r\n                        to=\"/\"\r\n                        className=\"btn btn-clear btn-pad-large txt-center txt-dark\"\r\n                    >\r\n                        Cancel\r\n                    </Link>\r\n                    <button\r\n                        className=\"btn btn-success btn-pad-large\"\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst randomStr = (length) => {\r\n    let result           = '';\r\n    const characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    const charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n }\r\n\r\n const formRules = {\r\n    properties: {\r\n        title: {\r\n            type: 'string',\r\n            required: true,\r\n            allowEmpty: false,\r\n            message: \"This field is required\"\r\n        },\r\n        content: {\r\n            required: true,\r\n            conform: (data) => {\r\n                return data.replace(/(<([^>]+)>)|(?:\\r\\n|\\r|\\n)/gi, '') ? true : false;\r\n            },\r\n            message: \"This field is required\"\r\n        },\r\n        author: {\r\n            type: 'string',\r\n            required: true,\r\n            allowEmpty: false,\r\n            message: \"This field is required\"\r\n        },\r\n        category: {\r\n            type: 'string',\r\n            required: true,\r\n            allowEmpty: false,\r\n            message: \"This field is required\"\r\n        },\r\n    }\r\n }\r\n\r\nexport default BlogForm;","import revalidator from 'revalidator';\r\n\r\n/**BASED ON https://github.com/flatiron/revalidator**/\r\nexport function validate(object, schema, options, hideName = false){\r\n\tlet errors = {};\r\n\tlet validation = revalidator.validate(object, schema, options);\r\n\tif (!validation.valid) {\r\n\t\tconst humanize = (str) => {\r\n\t\t\tlet frags = str.split('_');\r\n\t\t\tfor (let i=0; i<frags.length; i++) {\r\n\t\t\t\tfrags[i] = frags[i].charAt(0).toUpperCase() + frags[i].slice(1);\r\n\t\t\t}\r\n\t\t\treturn frags.join(' ');\r\n\t\t};\r\n\r\n\t\tvalidation.errors.forEach((error) => {\r\n\t\t\tlet propName = humanize(error.property);\r\n\t\t\tif (hideName) {\r\n\t\t\t\terrors[error.property] = `${error.message}`;\r\n\t\t\t} else {\r\n\t\t\t\terrors[error.property] = `\"${propName}\" ${error.message}`;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn {\r\n\t\tvalid: validation.valid,\r\n\t\terrors: errors\r\n\t};\r\n}\r\n","import React from 'react';\r\nimport { withRouter, Router, Route, Switch } from 'react-router-dom';\r\nimport history from './History';\r\n\r\nimport ListView from './views/ListView/';\r\nimport BlogView from './views/BlogView/';\r\nimport BlogForm from './views/BlogForm';\r\n\r\nconst Routes = () => (\r\n    <Router history={history}>\r\n        <Switch>\r\n            <Route \r\n                exact\r\n                path=\"/\"\r\n            >\r\n                <ListView />\r\n            </Route>\r\n            <Route  path=\"/blog/view/:uuid\" >\r\n                <BlogView />\r\n            </Route>\r\n            <Route  path=\"/blog/:action/:uuid?\" >\r\n                <BlogForm />\r\n            </Route>\r\n        </Switch>\r\n    </Router>\r\n);\r\n\r\nexport default withRouter(Routes);\r\n\r\n","/*eslint-disable import/default*/\r\n\r\nimport React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { render } from 'react-dom';\r\nimport Routes from './Routes';\r\n\r\nimport './assets/scss/all.scss';\r\n\r\nrender(\r\n\t<BrowserRouter>\r\n        <Routes />\r\n    </BrowserRouter>,\r\n\tdocument.getElementById('root') \r\n);\r\n"],"sourceRoot":""}